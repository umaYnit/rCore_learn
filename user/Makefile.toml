[config]
skip_core_tasks = true

[env]
MODE = { value = "release", condition = { env_not_set = ["MODE"] } }

TARGET = "riscv64gc-unknown-none-elf"

APP_DIR = "src/bin"
TARGET_DIR = "target/${TARGET}/${MODE}/"

[tasks.elf]
env = { RELEASE_FLAG = { value = "--release", condition = { env = { "MODE" = "release" } } } }
command = "cargo"
args = ["build", "@@trim(RELEASE_FLAG)"]

[tasks.binary]
command = "rust-objcopy"
args = ["--binary-architecture=riscv64",
    "--strip-all", "-O", "binary", "${FILE_ELF}", "${FILE_BIN}"]
dependencies = ["elf"]

[tasks.build]
script_runner = "@duckscript"
script = '''
handle = glob_array ${APP_DIR}/*.rs
for path in ${handle}
    app_name = basename ${path}
    app_name = substring ${app_name} -3
    file_elf = set "${TARGET_DIR}${app_name}"
    set_env FILE_ELF ${file_elf}
    set_env FILE_BIN "${file_elf}.bin"
    cm_run_task binary
end
'''
dependencies = ["elf"]

[tasks.clippy]
command = "cargo"
args = ["clippy", "@@split(COMPILER_ARGS, )"]


# this issue: https://github.com/rust-embedded/cargo-binutils/issues/89
[tasks.readelf]
command = "rust-readobj"
args = ["--elf-output-style=GNU", "--headers", "${KERNEL_ELF}"]
dependencies = ["elf"]

[tasks.objdump]
script_runner = "@shell"
script = "rust-objdump --disassemble --demangle --section=.text --section=.got ${KERNEL_ELF} | rustfilt"
dependencies = ["elf"]

[tasks.nm]
script_runner = "@shell"
script = "rust-nm --demangle --print-size ${KERNEL_ELF} | sort | rustfilt"
dependencies = ["elf"]

# For rust-analyzer
[tasks.check]
command = "cargo"
args = ["check", "--message-format=json"]
